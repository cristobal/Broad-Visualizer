<?xml version="1.0" encoding="utf-8"?>
<menu:MenuContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:menu="com.bienvisto.ui.menu.*" creationComplete="initComponent(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			[Event(name="videoSequencesClick", type="flash.events.Event")]
			public static const VIDEO_SEQUENCES_CLICK:String = "videoSequencesClick";
			
			[Event(name="localTopologyClick", type="flash.events.Event")]
			public static const LOCAL_TOPOLOGY_CLICK:String = "localTopologyClick";
			
			[Event(name="topologyClick", type="flash.events.Event")]
			public static const TOPOLOGY_CLICK:String = "topologyClick";
			
			private function initComponent(event:FlexEvent):void
			{	
				videoSequencesButton = new Button();
				videoSequencesButton.visible = false;
				videoSequencesButton.label = "Video Sequences";
				videoSequencesButton.addEventListener(MouseEvent.CLICK, handleVideoButtonClick);
				
				localTopologyButton = new Button();
				localTopologyButton.visible = false;
				localTopologyButton.label = "Local Topology";
				localTopologyButton.addEventListener(MouseEvent.CLICK, handleLocalTopologyButtonClick);
				
				topologyButton       = new Button();
				topologyButton.visible = false;
				topologyButton.label = "Topology";
				topologyButton.addEventListener(MouseEvent.CLICK, handleTopologyButtonClick);
			}

			/**
			 * Set video sequences enabled
			 * 
			 * @param value
			 */ 
			public function setVideoSequencesEnabled(value:Boolean):void
			{
				videoSequencesButton.visible = value;
				invalidate();
			}
			
			/**
			 * Set local topology enabled
			 * 
			 * @param value
			 */ 
			public function setLocalTopologyEnabled(value:Boolean):void
			{
				localTopologyButton.visible = value;
				invalidate();
			}
			
			/**
			 * Set topology enabled
			 * 
			 * @param value
			 */ 
			public function setTopologyEnabled(value:Boolean):void
			{
				topologyButton.visible = value;
				invalidate();
			}
			
			/**
			 * Handle video button click
			 * 
			 * @param event
			 */ 
			private function handleVideoButtonClick(event:MouseEvent):void
			{
				dispatchEvent(new Event(VIDEO_SEQUENCES_CLICK));
			}
			
			/**
			 * Handle local topology button click
			 * 
			 * @param event
			 */ 
			private function handleLocalTopologyButtonClick(event:MouseEvent):void
			{
				dispatchEvent(new Event(LOCAL_TOPOLOGY_CLICK));
			}
			
			/**
			 * Handle topology button click
			 * 
			 * @param event
			 */ 
			private function handleTopologyButtonClick(event:MouseEvent):void
			{
				dispatchEvent(new Event(TOPOLOGY_CLICK));
			}
			
			/**
			 * Invalidate
			 */ 
			private function invalidate():void
			{
				var index:int = 1;
				if (videoSequencesButton.visible) {
					buttons.addElementAt(videoSequencesButton, index++);
				}
				else if (buttons.containsElement(videoSequencesButton)) {
					buttons.removeElement(videoSequencesButton);
				}
				
				if (localTopologyButton.visible) {
					buttons.addElementAt(localTopologyButton, index++);
				}
				else if (buttons.contains(localTopologyButton)) {
					buttons.removeElement(localTopologyButton);
				}
				
				if (topologyButton.visible) {
					buttons.addElementAt(topologyButton, index++);
				}
				else if (buttons.contains(topologyButton)) {
					buttons.removeElement(topologyButton);
				}
				
				buttons.addElementAt(optionsButton, index);
			}
		]]>
	</fx:Script>
	<s:BorderContainer id="optionsContainer" width="100%" height="30" y="0" backgroundColor="0xafafaf" borderColor="0x717171">
		<s:layout>
			<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle" paddingTop="0" paddingLeft="5" />
		</s:layout>
		<s:Label text="Toggle Elements:" />	
		
	</s:BorderContainer>
	
	<s:BorderContainer id="container" width="100%" height="30" backgroundColor="0xF1F1F1" borderColor="0xCCCCCC">
		<s:Group left="5" top="2">	
			<s:Button id="browseFileButton" label="Load file" />		
		</s:Group>
		<s:Group id="buttons" right="5" top="2">
			<s:layout>
				<s:HorizontalLayout horizontalAlign="right" verticalAlign="middle" />
			</s:layout>
			<s:Button id="debugButton" label="Debug" />
			<s:Button id="optionsButton" label="Options" />
		</s:Group>
	</s:BorderContainer>
</menu:MenuContainer>
